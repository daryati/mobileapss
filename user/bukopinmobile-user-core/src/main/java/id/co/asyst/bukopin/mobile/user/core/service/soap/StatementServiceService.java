
package id.co.asyst.bukopin.mobile.user.core.service.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "StatementService-service", 
targetNamespace = "http://xmlns.example.com/1535727132417", 
wsdlLocation = "classpath:wsdl/statement.wsdl")

@org.springframework.stereotype.Service
public class StatementServiceService
    extends Service
{
	
	public final static URL WSDL_LOCATION;

   /* private final static URL STATEMENTSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException STATEMENTSERVICESERVICE_EXCEPTION;*/
    private final static QName STATEMENTSERVICESERVICE_QNAME = new QName("http://xmlns.example.com/1535727132417", "StatementService-service");

    static {
        URL url = null;
        try {
            url = new URL("classpath:wsdl/statement.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AccountStatementServices.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/statement.wsdl");
        }
        WSDL_LOCATION = url;
    }
    

    public StatementServiceService() {
        super(WSDL_LOCATION, STATEMENTSERVICESERVICE_QNAME);
    }

    public StatementServiceService(WebServiceFeature... features) {
        super(WSDL_LOCATION, STATEMENTSERVICESERVICE_QNAME, features);
    }

    public StatementServiceService(URL wsdlLocation) {
        super(wsdlLocation, STATEMENTSERVICESERVICE_QNAME);
    }

    public StatementServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, STATEMENTSERVICESERVICE_QNAME, features);
    }

    public StatementServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StatementServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns StatementPT
     */
    @WebEndpoint(name = "StatementPTEndpointBinding")
    public StatementPT getStatementPTEndpointBinding() {
        return super.getPort(new QName("http://xmlns.example.com/1535727132417", "StatementPTEndpointBinding"), StatementPT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StatementPT
     */
    @WebEndpoint(name = "StatementPTEndpointBinding")
    public StatementPT getStatementPTEndpointBinding(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlns.example.com/1535727132417", "StatementPTEndpointBinding"), StatementPT.class, features);
    }

   /* private static URL __getWsdlLocation() {
        if (STATEMENTSERVICESERVICE_EXCEPTION!= null) {
            throw STATEMENTSERVICESERVICE_EXCEPTION;
        }
        return STATEMENTSERVICESERVICE_WSDL_LOCATION;
    }*/

}
