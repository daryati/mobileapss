
package id.co.asyst.bukopin.mobile.master.core.service.soap;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CBSProductInfo", 
					targetNamespace = "http://xmlns.example.com/1571383336914", 
					wsdlLocation = "classpath:wsdl/CBSProduntInfo.wsdl")
@org.springframework.stereotype.Service
@HandlerChain(file="handler-chain.xml") // soap interceptor to log (in "common" module)
public class CBSProductInfo extends Service
{

    /*private final static URL CBSPRODUCTINFO_WSDL_LOCATION;
    private final static WebServiceException CBSPRODUCTINFO_EXCEPTION;*/
    private final static QName CBSPRODUCTINFO_QNAME = new QName("http://xmlns.example.com/1571383336914", "CBSProductInfo");
    public final static URL WSDL_LOCATION;
    public final static QName ProductInfoPTEndpoint1 = new QName("http://xmlns.example.com/1571383336914", "ProductInfoPTEndpoint1");
    
    
    
    static {
        URL url = null;
        try {
            url = new URL("classpath:wsdl/CBSProduntInfo.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CBSExchangeRate.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/CBSProduntInfo.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CBSProductInfo() {
        super(WSDL_LOCATION, CBSPRODUCTINFO_QNAME);
    }

    public CBSProductInfo(WebServiceFeature... features) {
        super(WSDL_LOCATION, CBSPRODUCTINFO_QNAME, features);
    }

    public CBSProductInfo(URL wsdlLocation) {
        super(wsdlLocation, CBSPRODUCTINFO_QNAME);
    }

    public CBSProductInfo(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CBSPRODUCTINFO_QNAME, features);
    }

    public CBSProductInfo(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CBSProductInfo(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ProductInfoPT
     */
    @WebEndpoint(name = "ProductInfoPTEndpoint1")
    public ProductInfoPT getProductInfoPTEndpoint1() {
        return super.getPort(ProductInfoPTEndpoint1, ProductInfoPT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductInfoPT
     */
    @WebEndpoint(name = "ProductInfoPTEndpoint1")
    public ProductInfoPT getProductInfoPTEndpoint1(WebServiceFeature... features) {
        return super.getPort(ProductInfoPTEndpoint1, ProductInfoPT.class, features);
    }

   /* private static URL __getWsdlLocation() {
        if (CBSPRODUCTINFO_EXCEPTION!= null) {
            throw CBSPRODUCTINFO_EXCEPTION;
        }
        return CBSPRODUCTINFO_WSDL_LOCATION;
    }*/

}
