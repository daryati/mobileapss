
package id.co.asyst.bukopin.mobile.master.core.service.soap;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;



/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CBSExchangeRate", 
targetNamespace = "http://xmlns.example.com/1571040722628", 
wsdlLocation = "classpath:wsdl/exchangerate-v2.wsdl")
@org.springframework.stereotype.Service
@HandlerChain(file="handler-chain.xml") // soap interceptor to log (in "common" module)
public class CBSExchangeRate
    extends Service
{

    /*private final static URL CBSEXCHANGERATE_WSDL_LOCATION;
    private final static WebServiceException CBSEXCHANGERATE_EXCEPTION;*/
    private final static QName CBSEXCHANGERATE_QNAME = new QName("http://xmlns.example.com/1571040722628", "CBSExchangeRate");
    public final static URL WSDL_LOCATION;
    public final static QName ExchangeRatePTEndpoint1 = new QName("http://xmlns.example.com/1571040722628", "ExchangeRatePTEndpoint1");
    
    
    static {
        URL url = null;
        try {
            url = new URL("classpath:wsdl/exchangerate-v2.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CBSExchangeRate.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/exchangerate-v2.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CBSExchangeRate() {
        super(WSDL_LOCATION, CBSEXCHANGERATE_QNAME);
    }

    public CBSExchangeRate(WebServiceFeature... features) {
        super(WSDL_LOCATION, CBSEXCHANGERATE_QNAME, features);
    }

    public CBSExchangeRate(URL wsdlLocation) {
        super(wsdlLocation, CBSEXCHANGERATE_QNAME);
    }

    public CBSExchangeRate(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CBSEXCHANGERATE_QNAME, features);
    }

    public CBSExchangeRate(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CBSExchangeRate(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ExchangeRatePT
     */
    @WebEndpoint(name = "ExchangeRatePTEndpoint1")
    public ExchangeRatePT getExchangeRatePTEndpoint1() {
        return super.getPort(ExchangeRatePTEndpoint1, ExchangeRatePT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ExchangeRatePT
     */
    @WebEndpoint(name = "ExchangeRatePTEndpoint1")
    public ExchangeRatePT getExchangeRatePTEndpoint1(WebServiceFeature... features) {
        return super.getPort(ExchangeRatePTEndpoint1, ExchangeRatePT.class, features);
    }

    /*private static URL __getWsdlLocation() {
        if (CBSEXCHANGERATE_EXCEPTION!= null) {
            throw CBSEXCHANGERATE_EXCEPTION;
        }
        return CBSEXCHANGERATE_WSDL_LOCATION;
    }*/

}
